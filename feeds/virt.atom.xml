<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Cole Robinson - virt</title><link href="https://blog.wikichoon.com/" rel="alternate"></link><link href="https://blog.wikichoon.com/feeds/virt.atom.xml" rel="self"></link><id>https://blog.wikichoon.com/</id><updated>2020-07-12T00:00:00-04:00</updated><subtitle>Cole's dev log</subtitle><entry><title>virt-manager libvirt XML editor UI</title><link href="https://blog.wikichoon.com/2020/07/virt-manager-xml-editor.html" rel="alternate"></link><published>2020-07-12T00:00:00-04:00</published><updated>2020-07-12T00:00:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2020-07-12:/2020/07/virt-manager-xml-editor.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.redhat.com/archives/virt-tools-list/2019-June/msg00099.html"&gt;virt-manager 2.2.0&lt;/a&gt; was released in June of last year. It shipped with a major new feature: libvirt XML viewing and editing UI for new and existing domain, pools, volumes, networks.&lt;/p&gt;
&lt;p&gt;Every VM, network, and storage object page has a &lt;strong&gt;XML&lt;/strong&gt; tab at the top. Here's an example with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.redhat.com/archives/virt-tools-list/2019-June/msg00099.html"&gt;virt-manager 2.2.0&lt;/a&gt; was released in June of last year. It shipped with a major new feature: libvirt XML viewing and editing UI for new and existing domain, pools, volumes, networks.&lt;/p&gt;
&lt;p&gt;Every VM, network, and storage object page has a &lt;strong&gt;XML&lt;/strong&gt; tab at the top. Here's an example with that tab selected from the VM &lt;strong&gt;Overview&lt;/strong&gt; section:&lt;/p&gt;
&lt;p&gt;&lt;img alt="VM XML editor" src="https://blog.wikichoon.com/images/079-xml1.png" width="500"&gt;&lt;/p&gt;
&lt;p&gt;Here's an example of the XML view when just a disk is selected. Note it only shows that single device's libvirt XML:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Disk XML editor" src="https://blog.wikichoon.com/images/079-xml2.png" width="500"&gt;&lt;/p&gt;
&lt;p&gt;By default the XML is not editable; notice the warning at the top of the first image. After editing is enabled, the warning is gone, like in the second image. You can enable editing via Edit-&amp;gt;Preferences from the main &lt;strong&gt;Manager&lt;/strong&gt; window. Here's what the option looks like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="XML edit preference" src="https://blog.wikichoon.com/images/079-xml-prefs.png" width="500"&gt;&lt;/p&gt;
&lt;p&gt;A bit of background: We are constantly receiving requests to expose libvirt XML config options in virt-manager's UI. Some of these knobs are necessary for &amp;lt;1% but uninteresting to the rest. Some options are difficult to set from the command line because they must be set at VM install time, which means switch from virt-manager to virt-install which is not trivial. And so on. When these options aren't added to the UI, it makes life difficult for those affected users. It's also difficult and draining to have these types of justification conversations on the regular.&lt;/p&gt;
&lt;p&gt;The XML editing UI was added to relieve some of the pressure on virt-manager developers fielding these requests, and to give more power to advanced virt users. The users that know they need an advanced option are usually comfortable editing the libvirt XML directly. The XML editor doesn't detract from the existing UI much IMO, and it is uneditable by default to prevent less knowledgeable users from getting into trouble. It ain't gonna win any words for great UI, but the feedback has been largely positive so far.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>virt-convert tool removed in virt-manager.git</title><link href="https://blog.wikichoon.com/2020/07/virt-convert-removed.html" rel="alternate"></link><published>2020-07-11T00:00:00-04:00</published><updated>2020-07-11T00:00:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2020-07-11:/2020/07/virt-convert-removed.html</id><summary type="html">&lt;p&gt;The next release of virt-manager will not ship the &lt;code&gt;virt-convert&lt;/code&gt; tool, I removed it upstream with &lt;a href="https://github.com/virt-manager/virt-manager/commit/ee9f93074bf74bd2e4c5177d750e7c438c7790cf"&gt;this commit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the slightly edited quote from my original proposal to remove it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;virt-convert takes an ovf/ova or vmx file and spits out libvirt XML.
It started as a code drop a …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;The next release of virt-manager will not ship the &lt;code&gt;virt-convert&lt;/code&gt; tool, I removed it upstream with &lt;a href="https://github.com/virt-manager/virt-manager/commit/ee9f93074bf74bd2e4c5177d750e7c438c7790cf"&gt;this commit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the slightly edited quote from my original proposal to remove it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;virt-convert takes an ovf/ova or vmx file and spits out libvirt XML.
It started as a code drop a long time ago that could translate back and
forth between vmx, ovf, and virt-image, a &lt;a href="https://blog.wikichoon.com/2014/04/deprecating-little-used-tool-virt-image1.html"&gt;long dead appliance format&lt;/a&gt;.
In 2014 I &lt;a href="https://blog.wikichoon.com/2014/04/virt-convert-command-line-has-been.html"&gt;changed virt-convert&lt;/a&gt; to do vmx -&amp;gt; libvirt and ovf -&amp;gt;
libvirt which was a CLI breaking change, but I never heard a peep of a
complaint. It doesn't do a particularly thorough job at its
intended goal, I've seen 2-3 bug reports in the past 5 years and
generally it doesn't seem to have any users. Let's kill it. If anyone
has the desire to keep it alive it could live as a separate project
that's a wrapper around virt-install but there's no compelling reason to
keep it in virt-manager.git IMO&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That mostly sums it up. If there's any users of virt-convert out there, you likely
can get similar results by extracting the relevant disk image from the
&lt;code&gt;.vmx&lt;/code&gt; or &lt;code&gt;.ovf&lt;/code&gt; config, pass it to &lt;code&gt;virt-manager&lt;/code&gt; or &lt;code&gt;virt-install&lt;/code&gt;, and let
those tools fill in the defaults. In truth that's about all &lt;code&gt;virt-convert&lt;/code&gt; did in
to begin with.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>virt-manager is deprecated in RHEL (but only RHEL)</title><link href="https://blog.wikichoon.com/2020/06/virt-manager-deprecated-in-rhel.html" rel="alternate"></link><published>2020-06-16T13:00:00-04:00</published><updated>2020-06-16T13:00:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2020-06-16:/2020/06/virt-manager-deprecated-in-rhel.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: I'm the primary author of virt-manager. virt-manager is deprecated in RHEL8 in favor of cockpit, but ONLY in RHEL8 and future RHEL releases. The upstream project virt-manager is still maintained and is still relevant for other distros.&lt;/p&gt;
&lt;p&gt;Google 'virt-manager deprecated' and you'll find some discussions suggesting
virt-manager is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: I'm the primary author of virt-manager. virt-manager is deprecated in RHEL8 in favor of cockpit, but ONLY in RHEL8 and future RHEL releases. The upstream project virt-manager is still maintained and is still relevant for other distros.&lt;/p&gt;
&lt;p&gt;Google 'virt-manager deprecated' and you'll find some discussions suggesting
virt-manager is no longer maintained, &lt;a href="https://cockpit-project.org/"&gt;Cockpit&lt;/a&gt; is replacing virt-manager, virt-manager is going to be removed from every distro, etc. These conclusions are misinformed.&lt;/p&gt;
&lt;p&gt;The primary source for this confusion is the section 'virt-manager has been deprecated' from the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.2_release_notes/deprecated_functionality#deprecated-functionality_virtualization"&gt;RHEL8 release notes virtualization deprecation section&lt;/a&gt;. Relevant quote from the RHEL8.2 docs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Virtual Machine Manager application, also known as virt-manager, has been deprecated.
The RHEL 8 web console, also known as Cockpit, is intended to become its replacement in a subsequent release.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What that means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;virt-manager is in RHEL8 and will be there for the lifetime of RHEL8.&lt;/li&gt;
&lt;li&gt;Red Hat engineering effort assigned to the virt-manager UI has been reduced compared to previous RHEL versions.&lt;/li&gt;
&lt;li&gt;The tentative plan is to not ship the virt-manager UI in RHEL9.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why is this happening? As I understand it, RHEL wants to roughly standardize on Cockpit as their host admin UI tool. It's a great project with great engineers and great UI designers. Red Hat is going all in on it for RHEL and aims to replace the mismash of system-config-X tools and project specific admin frontends (like virt-manager) with a unified project. (Please note: this is my paraphrased understanding, I'm not speaking on behalf of Red Hat here.)&lt;/p&gt;
&lt;p&gt;Notice though, this is all about RHEL. virt-manager is not deprecated upstream, or deprecated in other distros automatically just because RHEL has made this decision. The upstream virt-manager project continues on and Red Hat continues to allocate resources to maintain it.&lt;/p&gt;
&lt;p&gt;Also, I'm distinguishing virt-manager UI from the virt-manager project, which includes tools like &lt;code&gt;virt-install&lt;/code&gt;. I fully expect &lt;code&gt;virt-install&lt;/code&gt; to be shipped in RHEL9 and actively maintained (FWIW Cockpit uses it behind the scenes).&lt;/p&gt;
&lt;p&gt;And even if the virt-manager UI is not in RHEL9 repos, it will likely end up shipped in EPEL, so the UI will still be available for install, just through external repos.&lt;/p&gt;
&lt;p&gt;Overall my personal opinion is that as long as libvirt+KVM is in use on linux desktops and servers, virt-manager will be relevant. I don't expect anything to change in that area any time soon.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Blog moved to Pelican and GitHub Pages</title><link href="https://blog.wikichoon.com/2019/07/blog-moved.html" rel="alternate"></link><published>2019-07-30T15:30:00-04:00</published><updated>2019-07-30T15:30:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2019-07-30:/2019/07/blog-moved.html</id><summary type="html">&lt;p&gt;I've moved my blog from blogger.com to a static site generated with
&lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; and hosted on GitHub Pages. This
is a dump of some of the details.&lt;/p&gt;
&lt;p&gt;The content is hosted in three branches across two repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/blog/tree/gh-pages"&gt;blog/gh-pages&lt;/a&gt;&lt;/strong&gt;: &lt;a href="https://blog.wikichoon.com"&gt;https://blog.wikichoon.com&lt;/a&gt; HTML content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/crobinso.github.io/tree/master"&gt;crobinso.github.io/master …&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've moved my blog from blogger.com to a static site generated with
&lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; and hosted on GitHub Pages. This
is a dump of some of the details.&lt;/p&gt;
&lt;p&gt;The content is hosted in three branches across two repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/blog/tree/gh-pages"&gt;blog/gh-pages&lt;/a&gt;&lt;/strong&gt;: &lt;a href="https://blog.wikichoon.com"&gt;https://blog.wikichoon.com&lt;/a&gt; HTML content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/crobinso.github.io/tree/master"&gt;crobinso.github.io/master&lt;/a&gt;&lt;/strong&gt;: &lt;a href="https://wikichoon.com"&gt;https://wikichoon.com&lt;/a&gt; front page HTML content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/crobinso.github.io/tree/pelican"&gt;crobinso.github.io/pelican&lt;/a&gt;&lt;/strong&gt;: website source content and theme&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The motivation for the split is that according to this &lt;a href="https://blog.kmonsoor.com/pelican-how-to-make-seo-friendly/"&gt;pelican SEO&lt;/a&gt; article, &lt;strong&gt;master&lt;/strong&gt; branches of GitHub repos are indexed by google, so if you store HTML content in a &lt;strong&gt;master&lt;/strong&gt; branch your canonical blog might be battling your GitHub repo in the search results. And since you can only put content in the &lt;strong&gt;master&lt;/strong&gt; branch of a &lt;code&gt;$username.github.io&lt;/code&gt; repo, I added a separate blog.git repo. Maybe I could shove all the content into the &lt;strong&gt;blog/gh-pages&lt;/strong&gt; branch I think dealing with multiple subdomains prevents it. I've already spent too much timing playing with all this stuff though so that's for another day to figure out. Of course, suggestions welcome, blog comments are enabled with Disqus.&lt;/p&gt;
&lt;p&gt;One issue I hit is that pushing updated content to &lt;strong&gt;blog/gh-pages&lt;/strong&gt; doesn't consistently trigger a new GitHub Pages deployment. There's a bunch of hits about this around the web (this &lt;a href="https://stackoverflow.com/questions/20422279/github-pages-are-not-updating"&gt;stackoverflow post&lt;/a&gt; in particular) but no authoritative explanation about what criteria GitHub Pages uses to determine whether to redeploy. The simplest 'fix' I found is to tweak the &lt;code&gt;index.html&lt;/code&gt; content via the GitHub web UI and commit the change which seems to consistently trigger a refresh as reported by the repo's &lt;a href="https://github.com/crobinso/blog/deployments"&gt;deployments page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You may notice the blog looks a lot like stock &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; with its &lt;a href="https://github.com/jekyll/minima"&gt;minima&lt;/a&gt; theme. I didn't find any Pelican theme that I liked as much as minima, so I grabbed the CSS from a minima instance and started adapting the Pelican &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/simple-bootstrap"&gt;simple-bootstrap&lt;/a&gt; theme to use it. The end result is basically a simple reimplementation of minima for Pelican. I learned a lot in the process but it likely would have been much simpler if I just used Jekyll in the first place, but I'm in too deep to switch now!&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Host 'Network Interfaces' panel removed from virt-manager</title><link href="https://blog.wikichoon.com/2019/04/host-network-interfaces-panel-removed.html" rel="alternate"></link><published>2019-04-09T14:01:00-04:00</published><updated>2019-04-09T14:01:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2019-04-09:/2019/04/host-network-interfaces-panel-removed.html</id><summary type="html">&lt;p&gt;I released &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00087.html"&gt;virt-manager 2.0.0&lt;/a&gt; in October 2018. Since the release contained the full port to python3, it seemed like a good opportunity to drop some baggage from the app.&lt;/p&gt;
&lt;p&gt;The biggest piece we removed was the UI for managing host network interfaces. This is the &lt;strong&gt;Connection Details-&amp;gt;Network …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I released &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00087.html"&gt;virt-manager 2.0.0&lt;/a&gt; in October 2018. Since the release contained the full port to python3, it seemed like a good opportunity to drop some baggage from the app.&lt;/p&gt;
&lt;p&gt;The biggest piece we removed was the UI for managing host network interfaces. This is the &lt;strong&gt;Connection Details-&amp;gt;Network Interfaces&lt;/strong&gt; panel, and the &lt;strong&gt;New Interface&lt;/strong&gt; wizard for defining host network definitions for things like bridges, bonds, and vlan devices. The main screen of the old UI looked like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="virt-manager host interfaces panel" height="280" src="https://blog.wikichoon.com/images/074-host-network-interfaces-panel-removed-1.png" width="400"&gt;&lt;/p&gt;
&lt;h4&gt;Some history&lt;/h4&gt;
&lt;p&gt;Behind the scenes, this UI was using libvirt's Interface APIs, which also power the &lt;code&gt;virsh iface-*&lt;/code&gt; commands. These APIs are little more than a wrapper around the &lt;a href="https://pagure.io/netcf"&gt;netcf&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;netcf aimed to be a linux distro independent API for network device configuration. On Red Hat distros this meant turning the API's XML format into an &lt;code&gt;/etc/sysconfig/network&lt;/code&gt; script. There were even pie-in-the-sky ideas about NetworkManager one day using netcf.&lt;/p&gt;
&lt;p&gt;In practice though the library never really took off. It was years before a debian backend showed up, contributed by a Red Hatter in the hope of increasing library uptake, though it didn't seem to help. netcf basically only existed to serve the libvirt Interface APIs, yet those APIs were never really used by any major libvirt consuming app, besides virt-manager. And in virt-manager's case it was largely just slapping some UI over the XML format and lifecycle operations.&lt;/p&gt;
&lt;p&gt;For virt-manager's usecases we hoped that netcf would make it trivial to bridge the host's network interface, which when used with VMs would give them first class IP addresses on the host network setup, not NAT like the 'default' virtual network. Unfortunately though the UI would create the ifcfg files well enough, behind the scenes nothing played well with NetworkManager for years and years. The standard suggestion for was to disable NetworkManager if you wanted to bridge your host NIC. Not very user friendly. Some people did manage to use the UI to that effect but it was never a trivial process.&lt;/p&gt;
&lt;h4&gt;The state today&lt;/h4&gt;
&lt;p&gt;Nowadays NetworkManager can handle bridging natively and is much more powerful than what virt-manager/libvirt/netcf provide. The virt-manager UI was more likely to shoot you in the foot than make things simple. And it had become increasingly clear that virt-manager was not the place to maintain host network config UI.&lt;/p&gt;
&lt;p&gt;So we made the decision to drop all this from virt-manager in 2.0.0. netcf and the libvirt interface APIs still exist. If you're interested in some more history on the interface API/netcf difficulties, check out &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00049.html"&gt;Laine's email&lt;/a&gt; to virt-tools-list.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Setting custom network names on Fedora</title><link href="https://blog.wikichoon.com/2018/10/setting-custom-network-names-on-fedora.html" rel="alternate"></link><published>2018-10-04T21:27:00-04:00</published><updated>2018-10-04T21:27:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2018-10-04:/2018/10/setting-custom-network-names-on-fedora.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/"&gt;systemd predictable network names&lt;/a&gt; give us host interface names like &lt;strong&gt;enp3s0&lt;/strong&gt;. On one of my hosts, I have two interfaces: one that is my regular hard wired connection, and another I only plug in occasionally for some virt network testing. I can never remember the systemd names, so I want …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/"&gt;systemd predictable network names&lt;/a&gt; give us host interface names like &lt;strong&gt;enp3s0&lt;/strong&gt;. On one of my hosts, I have two interfaces: one that is my regular hard wired connection, and another I only plug in occasionally for some virt network testing. I can never remember the systemd names, so I want to rename the interfaces to something more descriptive for my needs. in my case &lt;strong&gt;lan0main&lt;/strong&gt; and &lt;strong&gt;lan1pcie&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The page referenced says to use systemd links. However after struggling with that for a while I'm that's only relevant to systemd-networkd usage and doesn't apply to Fedora's default use of NetworkManager. So I needed another way.&lt;/p&gt;
&lt;p&gt;Long story short I ended up with some custom udev rules that are patterned after the old 70-persistent-net.rules file. Replace &lt;code&gt;$MYMAC1&lt;/code&gt; and &lt;code&gt;$MYMAC2&lt;/code&gt; with your specific values&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat /etc/udev/rules.d/99-cole-nic-names.rules
&lt;span class="go"&gt;SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;$MYMAC1&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, NAME=&amp;quot;lan0main&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;$MYMAC2&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, NAME=&amp;quot;lan1pcie&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Easy qemu commandline passthrough with virt-xml</title><link href="https://blog.wikichoon.com/2017/03/easy-qemu-commandline-passthrough-with.html" rel="alternate"></link><published>2017-03-24T21:30:00-04:00</published><updated>2017-03-24T21:30:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2017-03-24:/2017/03/easy-qemu-commandline-passthrough-with.html</id><summary type="html">&lt;p&gt;Libvirt has supported &lt;a href="https://libvirt.org/drvqemu.html#qemucommand"&gt;qemu commandline option passthrough&lt;/a&gt; for qemu/kvm VMs for quite a while. The format for it is a bit of a pain though since it requires setting a magic xmlns value at the top of the domain XML. Basically doing it by hand kinda sucks.&lt;/p&gt;
&lt;p&gt;In the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Libvirt has supported &lt;a href="https://libvirt.org/drvqemu.html#qemucommand"&gt;qemu commandline option passthrough&lt;/a&gt; for qemu/kvm VMs for quite a while. The format for it is a bit of a pain though since it requires setting a magic xmlns value at the top of the domain XML. Basically doing it by hand kinda sucks.&lt;/p&gt;
&lt;p&gt;In the recently released &lt;a href="https://blog.wikichoon.com/2017/03/virt-manager-141-released.html"&gt;virt-manager 1.4.1&lt;/a&gt;, we added a virt-install/virt-xml option &lt;code&gt;--qemu-commandline&lt;/code&gt; that tweaks option passthrough for new or existing VMs. So for example, if you wanted to add the qemu option string &lt;code&gt;-device FOO&lt;/code&gt; to an existing VM named &lt;strong&gt;f25&lt;/strong&gt;, you can do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./virt-xml f25 --edit --confirm --qemu-commandline=&amp;quot;-device FOO&amp;quot;

&lt;span class="gd"&gt;--- Original XML&lt;/span&gt;
&lt;span class="gi"&gt;+++ Altered XML&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1,4 +1,4 @@&lt;/span&gt;
&lt;span class="gd"&gt;-&amp;lt;domain type=&amp;quot;kvm&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+&amp;lt;domain xmlns:qemu=&amp;quot;https://libvirt.org/schemas/domain/qemu/1.0&amp;quot; type=&amp;quot;kvm&amp;quot;&amp;gt;&lt;/span&gt;
   &amp;lt;name&amp;gt;f25&amp;lt;/name&amp;gt;
   &amp;lt;uuid&amp;gt;9b6f1795-c88b-452a-a54c-f8579ddc18dd&amp;lt;/uuid&amp;gt;
   &amp;lt;memory unit=&amp;quot;KiB&amp;quot;&amp;gt;4194304&amp;lt;/memory&amp;gt;
&lt;span class="gu"&gt;@@ -104,4 +104,8 @@&lt;/span&gt;
       &amp;lt;address type=&amp;quot;pci&amp;quot; domain=&amp;quot;0x0000&amp;quot; bus=&amp;quot;0x00&amp;quot; slot=&amp;quot;0x0a&amp;quot; function=&amp;quot;0x0&amp;quot;/&amp;gt;
     &amp;lt;/rng&amp;gt;
   &amp;lt;/devices&amp;gt;
&lt;span class="gi"&gt;+  &amp;lt;qemu:commandline&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+    &amp;lt;qemu:arg value=&amp;quot;-device&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+    &amp;lt;qemu:arg value=&amp;quot;foo&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+  &amp;lt;/qemu:commandline&amp;gt;&lt;/span&gt;
 &amp;lt;/domain&amp;gt;

Define &amp;#39;f25&amp;#39; with the changed XML? (y/n):
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>virt-manager 1.4.1 released</title><link href="https://blog.wikichoon.com/2017/03/virt-manager-141-released.html" rel="alternate"></link><published>2017-03-08T19:15:00-05:00</published><updated>2017-03-08T19:15:00-05:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2017-03-08:/2017/03/virt-manager-141-released.html</id><summary type="html">&lt;p&gt;I've just released virt-manager 1.4.1. The highlights are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storage/nodedev event API support (Jovanka Gulicoska)&lt;/li&gt;
&lt;li&gt;UI options for enabling spice GL (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;Add default virtio-rng /dev/urandom for supported guest OS&lt;/li&gt;
&lt;li&gt;Cloning and rename support for UEFI VMs (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;libguestfs inspection UI improvements (Pino Toscano)&lt;/li&gt;
&lt;li&gt;virt-install …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've just released virt-manager 1.4.1. The highlights are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storage/nodedev event API support (Jovanka Gulicoska)&lt;/li&gt;
&lt;li&gt;UI options for enabling spice GL (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;Add default virtio-rng /dev/urandom for supported guest OS&lt;/li&gt;
&lt;li&gt;Cloning and rename support for UEFI VMs (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;libguestfs inspection UI improvements (Pino Toscano)&lt;/li&gt;
&lt;li&gt;virt-install: Add --qemu-commandline&lt;/li&gt;
&lt;li&gt;virt-install: Add --network vhostuser (Chen Hanxiao)&lt;/li&gt;
&lt;li&gt;virt-install: Add --sysinfo (Charles Arnold)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Plus the usual slew of bug fixes and small improvements.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>UEFI virt roms now in official Fedora repos</title><link href="https://blog.wikichoon.com/2016/06/uefi-virt-support-now-in-official.html" rel="alternate"></link><published>2016-06-29T13:27:00-04:00</published><updated>2016-06-29T13:27:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2016-06-29:/2016/06/uefi-virt-support-now-in-official.html</id><summary type="html">&lt;p&gt;&lt;a href="https://kparal.wordpress.com/2016/06/27/uefi-for-qemu-now-in-fedora-repositories/"&gt;Kamil&lt;/a&gt; got to it first, but just a note that UEFI roms for x86 and aarch64 virt are now shipped in the standard Fedora repos, where previously the recommended place to grab them was an external nightly repo. Kamil has updated the &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU"&gt;UEFI+QEMU wiki page&lt;/a&gt; to reflect this change …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://kparal.wordpress.com/2016/06/27/uefi-for-qemu-now-in-fedora-repositories/"&gt;Kamil&lt;/a&gt; got to it first, but just a note that UEFI roms for x86 and aarch64 virt are now shipped in the standard Fedora repos, where previously the recommended place to grab them was an external nightly repo. Kamil has updated the &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU"&gt;UEFI+QEMU wiki page&lt;/a&gt; to reflect this change.&lt;/p&gt;
&lt;p&gt;On up to date Fedora 23+ these roms will be installed automatically with the relevant qemu packages, and libvirt is properly configured to advertise the rom files to applications, so &lt;a href="https://blog.wikichoon.com/2016/01/uefi-support-in-virt-install-and-virt.html"&gt;enabling this with tools like virt-manager&lt;/a&gt; is available out of the box.&lt;/p&gt;
&lt;p&gt;For the curious, the reason we can now ship these binaries in Fedora is because the problematic EDK2 'FatPkg' code, which had a &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU&amp;amp;diff=431056&amp;amp;oldid=423634#EDK2_Licensing_Issues"&gt;Fedora incompatible license&lt;/a&gt;, was replaced with an implementation with a less restrictive (and more Fedora friendly) license.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>virt-manager 1.4.0 release</title><link href="https://blog.wikichoon.com/2016/06/virt-manager-140-release.html" rel="alternate"></link><published>2016-06-18T11:06:00-04:00</published><updated>2016-06-18T11:06:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2016-06-18:/2016/06/virt-manager-140-release.html</id><summary type="html">&lt;p&gt;I've just released virt-manager 1.4.0. Besides the &lt;a href="https://blog.wikichoon.com/2016/05/spice-openglvirgl-acceleration-on.html"&gt;spice GL bits that I previously talked about&lt;/a&gt;, nothing too much exciting in this release except a lot of virt-install/virt-xml command line extensions.&lt;/p&gt;
&lt;p&gt;The changelog highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;virt-manager: spice GL console support (Marc-André Lureau, Cole Robinson)&lt;/li&gt;
&lt;li&gt;Bump gtk and pygobject deps …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've just released virt-manager 1.4.0. Besides the &lt;a href="https://blog.wikichoon.com/2016/05/spice-openglvirgl-acceleration-on.html"&gt;spice GL bits that I previously talked about&lt;/a&gt;, nothing too much exciting in this release except a lot of virt-install/virt-xml command line extensions.&lt;/p&gt;
&lt;p&gt;The changelog highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;virt-manager: spice GL console support (Marc-André Lureau, Cole Robinson)&lt;/li&gt;
&lt;li&gt;Bump gtk and pygobject deps to 3.14&lt;/li&gt;
&lt;li&gt;virt-manager: add checkbox to forget keyring password (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;cli: add --graphics gl= (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --video accel3d= (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --graphics listen=none (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --transient flag (Richard W.M. Jones)&lt;/li&gt;
&lt;li&gt;cli: --features gic= support, and set a default for it (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;cli: Expose --video heads, ram, vram, vgamem&lt;/li&gt;
&lt;li&gt;cli: add --graphics listen=socket&lt;/li&gt;
&lt;li&gt;cli: add device address.type/address.bus/...&lt;/li&gt;
&lt;li&gt;cli: add --disk seclabelX.model (and .label, .relabel)&lt;/li&gt;
&lt;li&gt;cli: add --cpu cellX.id (and .cpus, and .memory)&lt;/li&gt;
&lt;li&gt;cli: add --network rom_bar= and rom_file=&lt;/li&gt;
&lt;li&gt;cli: add --disk backing_format=&lt;/li&gt;
&lt;/ul&gt;</content><category term="fedora"></category><category term="virt"></category></entry></feed>