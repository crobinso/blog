<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Cole Robinson - virt</title><link href="https://blog.wikichoon.com/" rel="alternate"></link><link href="https://blog.wikichoon.com/feeds/virt.atom.xml" rel="self"></link><id>https://blog.wikichoon.com/</id><updated>2020-06-16T13:00:00-04:00</updated><subtitle>Cole's dev log</subtitle><entry><title>virt-manager is deprecated in RHEL (but only RHEL)</title><link href="https://blog.wikichoon.com/2020/06/virt-manager-deprecated-in-rhel.html" rel="alternate"></link><published>2020-06-16T13:00:00-04:00</published><updated>2020-06-16T13:00:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2020-06-16:/2020/06/virt-manager-deprecated-in-rhel.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: I'm the primary author of virt-manager. virt-manager is deprecated in RHEL8 in favor of cockpit, but ONLY in RHEL8 and future RHEL releases. The upstream project virt-manager is still maintained and is still relevant for other distros.&lt;/p&gt;
&lt;p&gt;Google 'virt-manager deprecated' and you'll find some discussions suggesting
virt-manager is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: I'm the primary author of virt-manager. virt-manager is deprecated in RHEL8 in favor of cockpit, but ONLY in RHEL8 and future RHEL releases. The upstream project virt-manager is still maintained and is still relevant for other distros.&lt;/p&gt;
&lt;p&gt;Google 'virt-manager deprecated' and you'll find some discussions suggesting
virt-manager is no longer maintained, &lt;a href="https://cockpit-project.org/"&gt;Cockpit&lt;/a&gt; is replacing virt-manager, virt-manager is going to be removed from every distro, etc. These conclusions are misinformed.&lt;/p&gt;
&lt;p&gt;The primary source for this confusion is the section 'virt-manager has been deprecated' from the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.2_release_notes/deprecated_functionality#deprecated-functionality_virtualization"&gt;RHEL8 release notes virtualization deprecation section&lt;/a&gt;. Relevant quote from the RHEL8.2 docs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Virtual Machine Manager application, also known as virt-manager, has been deprecated.
The RHEL 8 web console, also known as Cockpit, is intended to become its replacement in a subsequent release.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What that means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;virt-manager is in RHEL8 and will be there for the lifetime of RHEL8.&lt;/li&gt;
&lt;li&gt;Red Hat engineering effort assigned to the virt-manager UI has been reduced compared to previous RHEL versions.&lt;/li&gt;
&lt;li&gt;The tentative plan is to not ship the virt-manager UI in RHEL9.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why is this happening? As I understand it, RHEL wants to roughly standardize on Cockpit as their host admin UI tool. It's a great project with great engineers and great UI designers. Red Hat is going all in on it for RHEL and aims to replace the mismash of system-config-X tools and project specific admin frontends (like virt-manager) with a unified project. (Please note: this is my paraphrased understanding, I'm not speaking on behalf of Red Hat here.)&lt;/p&gt;
&lt;p&gt;Notice though, this is all about RHEL. virt-manager is not deprecated upstream, or deprecated in other distros automatically just because RHEL has made this decision. The upstream virt-manager project continues on and Red Hat continues to allocate resources to maintain it.&lt;/p&gt;
&lt;p&gt;Also, I'm distinguishing virt-manager UI from the virt-manager project, which includes tools like &lt;code&gt;virt-install&lt;/code&gt;. I fully expect &lt;code&gt;virt-install&lt;/code&gt; to be shipped in RHEL9 and actively maintained (FWIW Cockpit uses it behind the scenes).&lt;/p&gt;
&lt;p&gt;And even if the virt-manager UI is not in RHEL9 repos, it will likely end up shipped in EPEL, so the UI will still be available for install, just through external repos.&lt;/p&gt;
&lt;p&gt;Overall my personal opinion is that as long as libvirt+KVM is in use on linux desktops and servers, virt-manager will be relevant. I don't expect anything to change in that area any time soon.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Blog moved to Pelican and GitHub Pages</title><link href="https://blog.wikichoon.com/2019/07/blog-moved.html" rel="alternate"></link><published>2019-07-30T15:30:00-04:00</published><updated>2019-07-30T15:30:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2019-07-30:/2019/07/blog-moved.html</id><summary type="html">&lt;p&gt;I've moved my blog from blogger.com to a static site generated with
&lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; and hosted on GitHub Pages. This
is a dump of some of the details.&lt;/p&gt;
&lt;p&gt;The content is hosted in three branches across two repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/blog/tree/gh-pages"&gt;blog/gh-pages&lt;/a&gt;&lt;/strong&gt;: &lt;a href="https://blog.wikichoon.com"&gt;https://blog.wikichoon.com&lt;/a&gt; HTML content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/crobinso.github.io/tree/master"&gt;crobinso.github.io/master …&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've moved my blog from blogger.com to a static site generated with
&lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; and hosted on GitHub Pages. This
is a dump of some of the details.&lt;/p&gt;
&lt;p&gt;The content is hosted in three branches across two repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/blog/tree/gh-pages"&gt;blog/gh-pages&lt;/a&gt;&lt;/strong&gt;: &lt;a href="https://blog.wikichoon.com"&gt;https://blog.wikichoon.com&lt;/a&gt; HTML content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/crobinso.github.io/tree/master"&gt;crobinso.github.io/master&lt;/a&gt;&lt;/strong&gt;: &lt;a href="https://wikichoon.com"&gt;https://wikichoon.com&lt;/a&gt; front page HTML content&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/crobinso/crobinso.github.io/tree/pelican"&gt;crobinso.github.io/pelican&lt;/a&gt;&lt;/strong&gt;: website source content and theme&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The motivation for the split is that according to this &lt;a href="https://blog.kmonsoor.com/pelican-how-to-make-seo-friendly/"&gt;pelican SEO&lt;/a&gt; article, &lt;strong&gt;master&lt;/strong&gt; branches of GitHub repos are indexed by google, so if you store HTML content in a &lt;strong&gt;master&lt;/strong&gt; branch your canonical blog might be battling your GitHub repo in the search results. And since you can only put content in the &lt;strong&gt;master&lt;/strong&gt; branch of a &lt;code&gt;$username.github.io&lt;/code&gt; repo, I added a separate blog.git repo. Maybe I could shove all the content into the &lt;strong&gt;blog/gh-pages&lt;/strong&gt; branch I think dealing with multiple subdomains prevents it. I've already spent too much timing playing with all this stuff though so that's for another day to figure out. Of course, suggestions welcome, blog comments are enabled with Disqus.&lt;/p&gt;
&lt;p&gt;One issue I hit is that pushing updated content to &lt;strong&gt;blog/gh-pages&lt;/strong&gt; doesn't consistently trigger a new GitHub Pages deployment. There's a bunch of hits about this around the web (this &lt;a href="https://stackoverflow.com/questions/20422279/github-pages-are-not-updating"&gt;stackoverflow post&lt;/a&gt; in particular) but no authoritative explanation about what criteria GitHub Pages uses to determine whether to redeploy. The simplest 'fix' I found is to tweak the &lt;code&gt;index.html&lt;/code&gt; content via the GitHub web UI and commit the change which seems to consistently trigger a refresh as reported by the repo's &lt;a href="https://github.com/crobinso/blog/deployments"&gt;deployments page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You may notice the blog looks a lot like stock &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; with its &lt;a href="https://github.com/jekyll/minima"&gt;minima&lt;/a&gt; theme. I didn't find any Pelican theme that I liked as much as minima, so I grabbed the CSS from a minima instance and started adapting the Pelican &lt;a href="https://github.com/getpelican/pelican-themes/tree/master/simple-bootstrap"&gt;simple-bootstrap&lt;/a&gt; theme to use it. The end result is basically a simple reimplementation of minima for Pelican. I learned a lot in the process but it likely would have been much simpler if I just used Jekyll in the first place, but I'm in too deep to switch now!&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Host 'Network Interfaces' panel removed from virt-manager</title><link href="https://blog.wikichoon.com/2019/04/host-network-interfaces-panel-removed.html" rel="alternate"></link><published>2019-04-09T14:01:00-04:00</published><updated>2019-04-09T14:01:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2019-04-09:/2019/04/host-network-interfaces-panel-removed.html</id><summary type="html">&lt;p&gt;I released &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00087.html"&gt;virt-manager 2.0.0&lt;/a&gt; in October 2018. Since the release contained the full port to python3, it seemed like a good opportunity to drop some baggage from the app.&lt;/p&gt;
&lt;p&gt;The biggest piece we removed was the UI for managing host network interfaces. This is the &lt;strong&gt;Connection Details-&amp;gt;Network …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I released &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00087.html"&gt;virt-manager 2.0.0&lt;/a&gt; in October 2018. Since the release contained the full port to python3, it seemed like a good opportunity to drop some baggage from the app.&lt;/p&gt;
&lt;p&gt;The biggest piece we removed was the UI for managing host network interfaces. This is the &lt;strong&gt;Connection Details-&amp;gt;Network Interfaces&lt;/strong&gt; panel, and the &lt;strong&gt;New Interface&lt;/strong&gt; wizard for defining host network definitions for things like bridges, bonds, and vlan devices. The main screen of the old UI looked like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="virt-manager host interfaces panel" height="280" src="https://blog.wikichoon.com/images/074-host-network-interfaces-panel-removed-1.png" width="400"&gt;&lt;/p&gt;
&lt;h4&gt;Some history&lt;/h4&gt;
&lt;p&gt;Behind the scenes, this UI was using libvirt's Interface APIs, which also power the &lt;code&gt;virsh iface-*&lt;/code&gt; commands. These APIs are little more than a wrapper around the &lt;a href="https://pagure.io/netcf"&gt;netcf&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;netcf aimed to be a linux distro independent API for network device configuration. On Red Hat distros this meant turning the API's XML format into an &lt;code&gt;/etc/sysconfig/network&lt;/code&gt; script. There were even pie-in-the-sky ideas about NetworkManager one day using netcf.&lt;/p&gt;
&lt;p&gt;In practice though the library never really took off. It was years before a debian backend showed up, contributed by a Red Hatter in the hope of increasing library uptake, though it didn't seem to help. netcf basically only existed to serve the libvirt Interface APIs, yet those APIs were never really used by any major libvirt consuming app, besides virt-manager. And in virt-manager's case it was largely just slapping some UI over the XML format and lifecycle operations.&lt;/p&gt;
&lt;p&gt;For virt-manager's usecases we hoped that netcf would make it trivial to bridge the host's network interface, which when used with VMs would give them first class IP addresses on the host network setup, not NAT like the 'default' virtual network. Unfortunately though the UI would create the ifcfg files well enough, behind the scenes nothing played well with NetworkManager for years and years. The standard suggestion for was to disable NetworkManager if you wanted to bridge your host NIC. Not very user friendly. Some people did manage to use the UI to that effect but it was never a trivial process.&lt;/p&gt;
&lt;h4&gt;The state today&lt;/h4&gt;
&lt;p&gt;Nowadays NetworkManager can handle bridging natively and is much more powerful than what virt-manager/libvirt/netcf provide. The virt-manager UI was more likely to shoot you in the foot than make things simple. And it had become increasingly clear that virt-manager was not the place to maintain host network config UI.&lt;/p&gt;
&lt;p&gt;So we made the decision to drop all this from virt-manager in 2.0.0. netcf and the libvirt interface APIs still exist. If you're interested in some more history on the interface API/netcf difficulties, check out &lt;a href="https://www.redhat.com/archives/virt-tools-list/2018-October/msg00049.html"&gt;Laine's email&lt;/a&gt; to virt-tools-list.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Setting custom network names on Fedora</title><link href="https://blog.wikichoon.com/2018/10/setting-custom-network-names-on-fedora.html" rel="alternate"></link><published>2018-10-04T21:27:00-04:00</published><updated>2018-10-04T21:27:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2018-10-04:/2018/10/setting-custom-network-names-on-fedora.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/"&gt;systemd predictable network names&lt;/a&gt; give us host interface names like &lt;strong&gt;enp3s0&lt;/strong&gt;. On one of my hosts, I have two interfaces: one that is my regular hard wired connection, and another I only plug in occasionally for some virt network testing. I can never remember the systemd names, so I want …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/"&gt;systemd predictable network names&lt;/a&gt; give us host interface names like &lt;strong&gt;enp3s0&lt;/strong&gt;. On one of my hosts, I have two interfaces: one that is my regular hard wired connection, and another I only plug in occasionally for some virt network testing. I can never remember the systemd names, so I want to rename the interfaces to something more descriptive for my needs. in my case &lt;strong&gt;lan0main&lt;/strong&gt; and &lt;strong&gt;lan1pcie&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The page referenced says to use systemd links. However after struggling with that for a while I'm that's only relevant to systemd-networkd usage and doesn't apply to Fedora's default use of NetworkManager. So I needed another way.&lt;/p&gt;
&lt;p&gt;Long story short I ended up with some custom udev rules that are patterned after the old 70-persistent-net.rules file. Replace &lt;code&gt;$MYMAC1&lt;/code&gt; and &lt;code&gt;$MYMAC2&lt;/code&gt; with your specific values&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gp"&gt;$&lt;/span&gt; cat /etc/udev/rules.d/99-cole-nic-names.rules
&lt;span class="go"&gt;SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;$MYMAC1&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, NAME=&amp;quot;lan0main&amp;quot;&lt;/span&gt;
&lt;span class="go"&gt;SUBSYSTEM==&amp;quot;net&amp;quot;, ACTION==&amp;quot;add&amp;quot;, DRIVERS==&amp;quot;?*&amp;quot;, ATTR{address}==&amp;quot;$MYMAC2&amp;quot;, ATTR{type}==&amp;quot;1&amp;quot;, NAME=&amp;quot;lan1pcie&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>Easy qemu commandline passthrough with virt-xml</title><link href="https://blog.wikichoon.com/2017/03/easy-qemu-commandline-passthrough-with.html" rel="alternate"></link><published>2017-03-24T21:30:00-04:00</published><updated>2017-03-24T21:30:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2017-03-24:/2017/03/easy-qemu-commandline-passthrough-with.html</id><summary type="html">&lt;p&gt;Libvirt has supported &lt;a href="https://libvirt.org/drvqemu.html#qemucommand"&gt;qemu commandline option passthrough&lt;/a&gt; for qemu/kvm VMs for quite a while. The format for it is a bit of a pain though since it requires setting a magic xmlns value at the top of the domain XML. Basically doing it by hand kinda sucks.&lt;/p&gt;
&lt;p&gt;In the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Libvirt has supported &lt;a href="https://libvirt.org/drvqemu.html#qemucommand"&gt;qemu commandline option passthrough&lt;/a&gt; for qemu/kvm VMs for quite a while. The format for it is a bit of a pain though since it requires setting a magic xmlns value at the top of the domain XML. Basically doing it by hand kinda sucks.&lt;/p&gt;
&lt;p&gt;In the recently released &lt;a href="https://blog.wikichoon.com/2017/03/virt-manager-141-released.html"&gt;virt-manager 1.4.1&lt;/a&gt;, we added a virt-install/virt-xml option &lt;code&gt;--qemu-commandline&lt;/code&gt; that tweaks option passthrough for new or existing VMs. So for example, if you wanted to add the qemu option string &lt;code&gt;-device FOO&lt;/code&gt; to an existing VM named &lt;strong&gt;f25&lt;/strong&gt;, you can do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./virt-xml f25 --edit --confirm --qemu-commandline=&amp;quot;-device FOO&amp;quot;

&lt;span class="gd"&gt;--- Original XML&lt;/span&gt;
&lt;span class="gi"&gt;+++ Altered XML&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1,4 +1,4 @@&lt;/span&gt;
&lt;span class="gd"&gt;-&amp;lt;domain type=&amp;quot;kvm&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+&amp;lt;domain xmlns:qemu=&amp;quot;https://libvirt.org/schemas/domain/qemu/1.0&amp;quot; type=&amp;quot;kvm&amp;quot;&amp;gt;&lt;/span&gt;
   &amp;lt;name&amp;gt;f25&amp;lt;/name&amp;gt;
   &amp;lt;uuid&amp;gt;9b6f1795-c88b-452a-a54c-f8579ddc18dd&amp;lt;/uuid&amp;gt;
   &amp;lt;memory unit=&amp;quot;KiB&amp;quot;&amp;gt;4194304&amp;lt;/memory&amp;gt;
&lt;span class="gu"&gt;@@ -104,4 +104,8 @@&lt;/span&gt;
       &amp;lt;address type=&amp;quot;pci&amp;quot; domain=&amp;quot;0x0000&amp;quot; bus=&amp;quot;0x00&amp;quot; slot=&amp;quot;0x0a&amp;quot; function=&amp;quot;0x0&amp;quot;/&amp;gt;
     &amp;lt;/rng&amp;gt;
   &amp;lt;/devices&amp;gt;
&lt;span class="gi"&gt;+  &amp;lt;qemu:commandline&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+    &amp;lt;qemu:arg value=&amp;quot;-device&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+    &amp;lt;qemu:arg value=&amp;quot;foo&amp;quot;/&amp;gt;&lt;/span&gt;
&lt;span class="gi"&gt;+  &amp;lt;/qemu:commandline&amp;gt;&lt;/span&gt;
 &amp;lt;/domain&amp;gt;

Define &amp;#39;f25&amp;#39; with the changed XML? (y/n):
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>virt-manager 1.4.1 released</title><link href="https://blog.wikichoon.com/2017/03/virt-manager-141-released.html" rel="alternate"></link><published>2017-03-08T19:15:00-05:00</published><updated>2017-03-08T19:15:00-05:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2017-03-08:/2017/03/virt-manager-141-released.html</id><summary type="html">&lt;p&gt;I've just released virt-manager 1.4.1. The highlights are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storage/nodedev event API support (Jovanka Gulicoska)&lt;/li&gt;
&lt;li&gt;UI options for enabling spice GL (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;Add default virtio-rng /dev/urandom for supported guest OS&lt;/li&gt;
&lt;li&gt;Cloning and rename support for UEFI VMs (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;libguestfs inspection UI improvements (Pino Toscano)&lt;/li&gt;
&lt;li&gt;virt-install …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've just released virt-manager 1.4.1. The highlights are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storage/nodedev event API support (Jovanka Gulicoska)&lt;/li&gt;
&lt;li&gt;UI options for enabling spice GL (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;Add default virtio-rng /dev/urandom for supported guest OS&lt;/li&gt;
&lt;li&gt;Cloning and rename support for UEFI VMs (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;libguestfs inspection UI improvements (Pino Toscano)&lt;/li&gt;
&lt;li&gt;virt-install: Add --qemu-commandline&lt;/li&gt;
&lt;li&gt;virt-install: Add --network vhostuser (Chen Hanxiao)&lt;/li&gt;
&lt;li&gt;virt-install: Add --sysinfo (Charles Arnold)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Plus the usual slew of bug fixes and small improvements.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>UEFI virt roms now in official Fedora repos</title><link href="https://blog.wikichoon.com/2016/06/uefi-virt-support-now-in-official.html" rel="alternate"></link><published>2016-06-29T13:27:00-04:00</published><updated>2016-06-29T13:27:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2016-06-29:/2016/06/uefi-virt-support-now-in-official.html</id><summary type="html">&lt;p&gt;&lt;a href="https://kparal.wordpress.com/2016/06/27/uefi-for-qemu-now-in-fedora-repositories/"&gt;Kamil&lt;/a&gt; got to it first, but just a note that UEFI roms for x86 and aarch64 virt are now shipped in the standard Fedora repos, where previously the recommended place to grab them was an external nightly repo. Kamil has updated the &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU"&gt;UEFI+QEMU wiki page&lt;/a&gt; to reflect this change …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://kparal.wordpress.com/2016/06/27/uefi-for-qemu-now-in-fedora-repositories/"&gt;Kamil&lt;/a&gt; got to it first, but just a note that UEFI roms for x86 and aarch64 virt are now shipped in the standard Fedora repos, where previously the recommended place to grab them was an external nightly repo. Kamil has updated the &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU"&gt;UEFI+QEMU wiki page&lt;/a&gt; to reflect this change.&lt;/p&gt;
&lt;p&gt;On up to date Fedora 23+ these roms will be installed automatically with the relevant qemu packages, and libvirt is properly configured to advertise the rom files to applications, so &lt;a href="https://blog.wikichoon.com/2016/01/uefi-support-in-virt-install-and-virt.html"&gt;enabling this with tools like virt-manager&lt;/a&gt; is available out of the box.&lt;/p&gt;
&lt;p&gt;For the curious, the reason we can now ship these binaries in Fedora is because the problematic EDK2 'FatPkg' code, which had a &lt;a href="https://fedoraproject.org/w/index.php?title=Using_UEFI_with_QEMU&amp;amp;diff=431056&amp;amp;oldid=423634#EDK2_Licensing_Issues"&gt;Fedora incompatible license&lt;/a&gt;, was replaced with an implementation with a less restrictive (and more Fedora friendly) license.&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>virt-manager 1.4.0 release</title><link href="https://blog.wikichoon.com/2016/06/virt-manager-140-release.html" rel="alternate"></link><published>2016-06-18T11:06:00-04:00</published><updated>2016-06-18T11:06:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2016-06-18:/2016/06/virt-manager-140-release.html</id><summary type="html">&lt;p&gt;I've just released virt-manager 1.4.0. Besides the &lt;a href="https://blog.wikichoon.com/2016/05/spice-openglvirgl-acceleration-on.html"&gt;spice GL bits that I previously talked about&lt;/a&gt;, nothing too much exciting in this release except a lot of virt-install/virt-xml command line extensions.&lt;/p&gt;
&lt;p&gt;The changelog highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;virt-manager: spice GL console support (Marc-André Lureau, Cole Robinson)&lt;/li&gt;
&lt;li&gt;Bump gtk and pygobject deps …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I've just released virt-manager 1.4.0. Besides the &lt;a href="https://blog.wikichoon.com/2016/05/spice-openglvirgl-acceleration-on.html"&gt;spice GL bits that I previously talked about&lt;/a&gt;, nothing too much exciting in this release except a lot of virt-install/virt-xml command line extensions.&lt;/p&gt;
&lt;p&gt;The changelog highlights:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;virt-manager: spice GL console support (Marc-André Lureau, Cole Robinson)&lt;/li&gt;
&lt;li&gt;Bump gtk and pygobject deps to 3.14&lt;/li&gt;
&lt;li&gt;virt-manager: add checkbox to forget keyring password (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;cli: add --graphics gl= (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --video accel3d= (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --graphics listen=none (Marc-André Lureau)&lt;/li&gt;
&lt;li&gt;cli: add --transient flag (Richard W.M. Jones)&lt;/li&gt;
&lt;li&gt;cli: --features gic= support, and set a default for it (Pavel Hrdina)&lt;/li&gt;
&lt;li&gt;cli: Expose --video heads, ram, vram, vgamem&lt;/li&gt;
&lt;li&gt;cli: add --graphics listen=socket&lt;/li&gt;
&lt;li&gt;cli: add device address.type/address.bus/...&lt;/li&gt;
&lt;li&gt;cli: add --disk seclabelX.model (and .label, .relabel)&lt;/li&gt;
&lt;li&gt;cli: add --cpu cellX.id (and .cpus, and .memory)&lt;/li&gt;
&lt;li&gt;cli: add --network rom_bar= and rom_file=&lt;/li&gt;
&lt;li&gt;cli: add --disk backing_format=&lt;/li&gt;
&lt;/ul&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>check-pylint: mini tool for running pylint anywhere</title><link href="https://blog.wikichoon.com/2016/06/check-pylint-mini-tool-for-running.html" rel="alternate"></link><published>2016-06-10T08:46:00-04:00</published><updated>2016-06-10T08:46:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2016-06-10:/2016/06/check-pylint-mini-tool-for-running.html</id><summary type="html">&lt;p&gt;pylint and pep8 are indispensable tools for python development IMO. For projects I maintain I've long ago added a 'setup pylint' sub-command to run both commands, and I've documented this as a necessary step in the contributor guidelines.&lt;/p&gt;
&lt;p&gt;But over the years I've accumulated many repos for small bits of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;pylint and pep8 are indispensable tools for python development IMO. For projects I maintain I've long ago added a 'setup pylint' sub-command to run both commands, and I've documented this as a necessary step in the contributor guidelines.&lt;/p&gt;
&lt;p&gt;But over the years I've accumulated many repos for small bits of python code that never have need for a setup.py script, but I still want the convenience of being able to run pylint and pep8 with a single command and a reasonable set of options.&lt;/p&gt;
&lt;p&gt;So, a while back I wrote this tiny '&lt;a href="https://github.com/crobinso/check-pylint"&gt;check-pylint&lt;/a&gt;' script which does exactly that. The main bit it adds is automatically searching the current directory for python scripts and modules and passing them to pylint/pep8. From the README:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple helper script that scoops up all python modules and scripts beneath the current directory, and passes them through pylint and pep8. Has a bit of smarts to ignore .git directory, and handle files that don't end in .py&lt;/p&gt;
&lt;p&gt;The point is that you can just fire off 'check-pylint' in any directory containing python code and get a quick report.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="fedora"></category><category term="virt"></category></entry><entry><title>spice OpenGL/virgl acceleration on Fedora 24</title><link href="https://blog.wikichoon.com/2016/05/spice-openglvirgl-acceleration-on.html" rel="alternate"></link><published>2016-05-22T10:56:00-04:00</published><updated>2016-05-22T10:56:00-04:00</updated><author><name>Cole Robinson</name></author><id>tag:blog.wikichoon.com,2016-05-22:/2016/05/spice-openglvirgl-acceleration-on.html</id><summary type="html">&lt;p&gt;New in Fedora 24 virt is 3D accelerated SPICE graphics, via &lt;a href="https://virgil3d.github.io/"&gt;Virgl&lt;/a&gt;. This is kinda-sorta OpenGL passthrough from the VM up to the host machine. Much of the initial support has been around since qemu 2.5, but it's more generally accessible now that SPICE is in the mix, since …&lt;/p&gt;</summary><content type="html">&lt;p&gt;New in Fedora 24 virt is 3D accelerated SPICE graphics, via &lt;a href="https://virgil3d.github.io/"&gt;Virgl&lt;/a&gt;. This is kinda-sorta OpenGL passthrough from the VM up to the host machine. Much of the initial support has been around since qemu 2.5, but it's more generally accessible now that SPICE is in the mix, since that's the default display type used by virt-manager and gnome-boxes.&lt;/p&gt;
&lt;p&gt;I'll explain below how you can test things on Fedora 24, but first let's cover the hurdles and caveats. This is far from being something that can be turned on by default and there's still serious integration issues to iron out. All of this is regarding usage with libvirt tools.&lt;/p&gt;
&lt;h4&gt;Caveats and known issues&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;This doesn't work with qemu:///system yet, which is what &lt;a href="https://blog.wikichoon.com/2016/01/qemusystem-vs-qemusession.html"&gt;virt-manager uses by default&lt;/a&gt;. Permissions and &lt;a href="https://www.redhat.com/archives/libvir-list/2016-May/msg01435.html"&gt;cgroup access&lt;/a&gt; are problematic at the moment. qemu:///session (the gnome-boxes default) is saved from some of these issues, but it's still affected by...&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1337333"&gt;svirt/selinux issues&lt;/a&gt;. We haven't come up with a plan here yet.&lt;/li&gt;
&lt;li&gt;When enabled, your VM can't be migrated or saved (migrate to disk), either directly or as part of taking a VM snapshot&lt;/li&gt;
&lt;li&gt;This only works if connecting to a VM on your local machine. And once enabled, the VM isn't accessible remotely whatsoever&lt;/li&gt;
&lt;li&gt;virt-manager has some weird rendering behavior that requires &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1337721"&gt;resizing the window first before you see any display output&lt;/a&gt;. It's fixed upstream, but no fedora build yet. virt-viewer works fine&lt;/li&gt;
&lt;li&gt;virt-manager has some &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1337721"&gt;weird behavior if trying to run two GL enabled VMs at once&lt;/a&gt;. Patches have been posted upstream for spice-gtk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because of these issues, we haven't exposed this as a UI knob in any of the tools yet, to save us some redundant bug reports for the above issues from users who are just clicking a cool sounding check box :) Instead you'll need to explicitly opt in via the command line.&lt;/p&gt;
&lt;h4&gt;Testing it out&lt;/h4&gt;
&lt;p&gt;You'll need the following packages (or later) to test this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;qemu-2.6.0-2.fc24&lt;/li&gt;
&lt;li&gt;libvirt-1.3.3.1-2.fc24&lt;/li&gt;
&lt;li&gt;virt-manager-1.3.2-4.20160520git2204de62d9.fc24&lt;/li&gt;
&lt;li&gt;At least F24 beta on the host&lt;/li&gt;
&lt;li&gt;Fedore 24 beta in the guest. Anything earlier is not going to actually enable the 3D acceleration. I have no idea about the state of other distributions. And to make it abundantly clear this is &lt;strong&gt;linux only&lt;/strong&gt; and likely will be for a long time at least, I don't know if Windows driver support is even on the radar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you install a Fedora 24 VM through the standard methods, you can enable spice GL for your VM with these two commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gp"&gt;$&lt;/span&gt; virt-xml --connect &lt;span class="nv"&gt;$URI&lt;/span&gt; &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --confirm --edit --video &lt;span class="nv"&gt;clearxml&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes,model&lt;span class="o"&gt;=&lt;/span&gt;virtio,accel3d&lt;span class="o"&gt;=&lt;/span&gt;yes
&lt;span class="gp"&gt;$&lt;/span&gt; virt-xml --connect &lt;span class="nv"&gt;$URI&lt;/span&gt; &lt;span class="nv"&gt;$VM_NAME&lt;/span&gt; --confirm --edit --graphics &lt;span class="nv"&gt;clearxml&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes,type&lt;span class="o"&gt;=&lt;/span&gt;spice,gl&lt;span class="o"&gt;=&lt;/span&gt;on,listen&lt;span class="o"&gt;=&lt;/span&gt;none
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first command will switch the graphics device to 'virtio' and enable the 3D acceleration setting. The second command will set up spice to listen locally only, and enable GL. Make sure to fully poweroff the VM afterwards for the settings to take effect. If you want to make the changes manually with '&lt;a href="https://wiki.libvirt.org/page/FAQ#Where_are_VM_config_files_stored.3F_How_do_I_edit_a_VM.27s_XML_config.3F"&gt;virsh edit&lt;/a&gt;', the XML specifics are described in the &lt;a href="https://cgit.freedesktop.org/spice/spice/commit/?id=782c7508e28fdeee786cdcebffd22f772d7f09ec"&gt;spice GL documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once your VM has started up, you can verify that everything is working correctly by checking &lt;code&gt;glxinfo&lt;/code&gt; output in the VM, 'virgl' should appear in the renderer string:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gp"&gt;$&lt;/span&gt; glxinfo &lt;span class="p"&gt;|&lt;/span&gt; grep virgl
&lt;span class="go"&gt;    Device: virgl (0x1010)&lt;/span&gt;
&lt;span class="go"&gt;OpenGL renderer string: Gallium 0.4 on virgl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And of course the more fun test of giving supertuxkart a spin :)&lt;/p&gt;
&lt;p&gt;Credit to Dave Airlie, Gerd Hoffman, and Marc-André Lureau for all the great work that got us to this point!&lt;/p&gt;</content><category term="fedora"></category><category term="virt"></category></entry></feed>